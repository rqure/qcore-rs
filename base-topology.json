{
  "schemas": [
    {
      "entityType": "Object",
      "inheritsFrom": [],
      "fields": [
        {
          "name": "Name",
          "dataType": "String",
          "default": "",
          "storageScope": "Configuration"
        },
        {
          "name": "Parent",
          "dataType": "EntityReference",
          "default": null,
          "storageScope": "Configuration"
        },
        {
          "name": "Description",
          "dataType": "String",
          "default": "",
          "storageScope": "Configuration"
        },
        {
          "name": "Children",
          "dataType": "EntityList",
          "default": [],
          "storageScope": "Configuration"
        },
        {
          "name": "Faceplates",
          "dataType": "EntityList",
          "default": [],
          "storageScope": "Configuration"
        }
      ]
    },
    {
      "entityType": "Root",
      "inheritsFrom": ["Object"],
      "fields": [
        {
          "name": "CreatedEntity",
          "dataType": "String",
          "default": null
        },
        {
          "name": "DeletedEntity",
          "dataType": "String",
          "default": null
        },
        {
          "name": "SchemaChange",
          "dataType": "String",
          "default": null
        }
      ]
    },
    {
      "entityType": "Folder",
      "inheritsFrom": ["Object"],
      "fields": []
    },
    {
      "entityType": "Machine",
      "inheritsFrom": ["Object"],
      "fields": []
    },
    {
      "entityType": "ExampleDevice",
      "inheritsFrom": ["Object"],
      "fields": [
        {
          "name": "Status",
          "dataType": "Choice",
          "default": "Offline",
          "choices": ["Offline", "Online", "Error", "Maintenance"],
          "storageScope": "Runtime"
        },
        {
          "name": "Temperature",
          "dataType": "Float",
          "default": 20.0,
          "storageScope": "Runtime"
        },
        {
          "name": "Pressure",
          "dataType": "Float",
          "default": 100.0,
          "storageScope": "Runtime"
        },
        {
          "name": "Active",
          "dataType": "Bool",
          "default": false,
          "storageScope": "Runtime"
        }
      ]
    },
    {
      "entityType": "Subject",
      "inheritsFrom": ["Object"],
      "fields": [
        {
          "name": "Secret",
          "dataType": "String",
          "default": "",
          "storageScope": "Configuration"
        },
        {
          "name": "AuthMethod",
          "dataType": "Choice",
          "default": "Native",
          "choices": ["Native", "LDAP", "OpenID Connect"],
          "storageScope": "Configuration"
        },
        {
          "name": "Active",
          "dataType": "Bool",
          "default": true,
          "storageScope": "Configuration"
        },
        {
          "name": "FailedAttempts",
          "dataType": "Int",
          "default": 0
        },
        {
          "name": "LockedUntil",
          "dataType": "Timestamp",
          "default": 0
        },
        {
          "name": "LastLogin",
          "dataType": "Timestamp",
          "default": 0
        }
      ]
    },
    {
      "entityType": "Candidate",
      "inheritsFrom": ["Object"],
      "fields": [
        {
          "name": "Heartbeat",
          "dataType": "Choice",
          "default": "Trigger",
          "choices": ["Trigger"]
        },
        {
          "name": "MakeMe",
          "dataType": "Choice",
          "default": "Unavailable",
          "choices": ["Unavailable", "Available"]
        },
        {
          "name": "DeathDetectionTimeout",
          "dataType": "Int",
          "default": 5000,
          "storageScope": "Configuration"
        }
      ]
    },
    {
      "entityType": "Service",
      "inheritsFrom": ["Candidate"],
      "fields": [
        {
          "name": "Status",
          "dataType": "Choice",
          "default": "Offline",
          "choices": ["Offline", "Online"]
        }
      ]
    },
    {
      "entityType": "User",
      "inheritsFrom": ["Subject"],
      "fields": []
    },
    {
      "entityType": "Permission",
      "inheritsFrom": ["Object"],
      "fields": [
        {
          "name": "Scope",
          "dataType": "Choice",
          "default": "Read Only",
          "choices": ["Read Only", "Read and Write"],
          "storageScope": "Configuration"
        },
        {
          "name": "ResourceType",
          "dataType": "String",
          "default": "",
          "storageScope": "Configuration"
        },
        {
          "name": "ResourceField",
          "dataType": "String",
          "default": "",
          "storageScope": "Configuration"
        },
        {
          "name": "Condition",
          "dataType": "String",
          "default": "",
          "storageScope": "Configuration"
        }
      ]
    },
    {
      "entityType": "Session",
      "inheritsFrom": ["Object"],
      "fields": [
        {
          "name": "CurrentUser",
          "dataType": "EntityReference",
          "default": null
        },
        {
          "name": "PreviousUser",
          "dataType": "EntityReference",
          "default": null
        },
        {
          "name": "Token",
          "dataType": "String",
          "default": ""
        },
        {
          "name": "ExpiresAt",
          "dataType": "Timestamp",
          "default": 0
        },
        {
          "name": "CreatedAt",
          "dataType": "Timestamp",
          "default": 0
        }
      ]
    },
    {
      "entityType": "FaultTolerance",
      "inheritsFrom": ["Object"],
      "fields": [
        {
          "name": "CandidateList",
          "dataType": "EntityList",
          "default": [],
          "storageScope": "Configuration"
        },
        {
          "name": "AvailableList",
          "dataType": "EntityList",
          "default": []
        },
        {
          "name": "CurrentLeader",
          "dataType": "EntityReference",
          "default": null
        },
        {
          "name": "FailOver",
          "dataType": "Choice",
          "default": "Trigger",
          "choices": ["Trigger"]
        },
        {
          "name": "FailOverGracePeriod",
          "dataType": "Int",
          "default": 1000,
          "storageScope": "Configuration"
        }
      ]
    },
    {
      "entityType": "Faceplate",
      "inheritsFrom": ["Object"],
      "fields": [
        {
          "name": "Configuration",
          "dataType": "String",
          "default": "{}",
          "storageScope": "Configuration"
        },
        {
          "name": "TargetEntityType",
          "dataType": "String",
          "default": "",
          "storageScope": "Configuration"
        }
      ]
    }
  ],
  "tree": {
    "entityType": "Root",
    "Name": "QOS",
    "Children": [
      {
        "entityType": "Machine",
        "Name": "qos-a",
        "Children": [
          {
            "entityType": "Service",
            "Name": "qcore"
          },
          {
            "entityType": "Service",
            "Name": "qweb",
            "Children": [
              {"entityType": "Session", "Name": "Session-1"},
              {"entityType": "Session", "Name": "Session-2"},
              {"entityType": "Session", "Name": "Session-3"},
              {"entityType": "Session", "Name": "Session-4"}
            ]
          }
        ]
      },
      {
        "entityType": "Machine",
        "Name": "qos-b",
        "Children": [
          {
            "entityType": "Service",
            "Name": "qcore"
          },
          {
            "entityType": "Service",
            "Name": "qweb",
            "Children": [
              {"entityType": "Session", "Name": "Session-1"},
              {"entityType": "Session", "Name": "Session-2"},
              {"entityType": "Session", "Name": "Session-3"},
              {"entityType": "Session", "Name": "Session-4"}
            ]
          }
        ]
      },
      {
        "entityType": "Machine",
        "Name": "qos-c",
        "Children": [
          {
            "entityType": "Service",
            "Name": "qcore"
          },
          {
            "entityType": "Service",
            "Name": "qweb",
            "Children": [
              {"entityType": "Session", "Name": "Session-1"},
              {"entityType": "Session", "Name": "Session-2"},
              {"entityType": "Session", "Name": "Session-3"},
              {"entityType": "Session", "Name": "Session-4"}
            ]
          }
        ]
      },
      {
        "entityType": "FaultTolerance",
        "Name": "qcore",
        "CandidateList": ["QOS/qos-a/qcore", "QOS/qos-b/qcore", "QOS/qos-c/qcore"]
      },
      {
        "entityType": "Folder",
        "Name": "Security Models",
        "Children": [
          {
            "entityType": "User",
            "Name": "qei",
            "Secret": "__hashpw__(qei)",
            "Active": true
          }
        ]
      },
      {
        "entityType": "Folder",
        "Name": "Example Devices",
        "Description": "Example device entities for testing faceplates",
        "Children": [
          {
            "entityType": "ExampleDevice",
            "Name": "Temperature Sensor 1",
            "Description": "Primary temperature sensor in Zone A",
            "Status": "Online",
            "Temperature": 25.5,
            "Pressure": 101.3,
            "Active": true,
            "Faceplates": [
              "QOS/Faceplate Builder/Faceplates/Temperature Sensor Display"
            ]
          },
          {
            "entityType": "ExampleDevice",
            "Name": "Temperature Sensor 2",
            "Description": "Backup temperature sensor in Zone A",
            "Status": "Online",
            "Temperature": 22.8,
            "Pressure": 101.2,
            "Active": true,
            "Faceplates": [
              "QOS/Faceplate Builder/Faceplates/Temperature Sensor Display"
            ]
          },
          {
            "entityType": "ExampleDevice",
            "Name": "Pressure Sensor 1",
            "Description": "High-precision pressure sensor",
            "Status": "Maintenance",
            "Temperature": 20.0,
            "Pressure": 98.5,
            "Active": false
          }
        ]
      },
      {
        "entityType": "Folder",
        "Name": "Faceplate Builder",
        "Children": [
          {
            "entityType": "Folder",
            "Name": "Faceplates",
            "Children": [
              {
                "entityType": "Faceplate",
                "Name": "Temperature Sensor Display",
                "Description": "Example faceplate showing temperature with color-coded visual display",
                "TargetEntityType": "ExampleDevice",
                "Configuration": "{\"model\":{\"type\":\"Model\",\"boundary\":{\"from\":{\"x\":0,\"y\":0},\"to\":{\"x\":400,\"y\":300}},\"shapes\":[{\"type\":\"Circle\",\"location\":{\"x\":200,\"y\":100},\"rotation\":0,\"radius\":60,\"fillColor\":\"#00ff88\",\"fillOpacity\":0.7},{\"type\":\"Text\",\"location\":{\"x\":200,\"y\":100},\"rotation\":0,\"text\":\"20.0°C\",\"fontSize\":24,\"color\":\"#ffffff\"},{\"type\":\"Text\",\"location\":{\"x\":200,\"y\":30},\"rotation\":0,\"text\":\"Temperature\",\"fontSize\":18,\"color\":\"#aaaaaa\"},{\"type\":\"Polygon\",\"location\":{\"x\":100,\"y\":220},\"rotation\":0,\"edges\":[{\"x\":-15,\"y\":-15},{\"x\":15,\"y\":-15},{\"x\":0,\"y\":15}],\"fillColor\":\"#ff0088\",\"fillOpacity\":0.5},{\"type\":\"Text\",\"location\":{\"x\":150,\"y\":220},\"rotation\":0,\"text\":\"Offline\",\"fontSize\":16,\"color\":\"#ff0088\"}]},\"notificationChannels\":[{\"name\":\"temperature_monitor\",\"config\":{\"EntityId\":{\"entity_id\":\"TARGET_ENTITY\",\"field_type\":\"Temperature\",\"trigger_on_change\":true,\"context\":[[\"Status\"]]}},\"callback\":\"function(notification) { const temp = notification.current.value.Float || 20.0; const tempIndicator = this.getShape(0); const tempText = this.getShape(1); if (tempText) { tempText.setText(temp.toFixed(1) + '°C'); } if (tempIndicator) { if (temp > 80) { tempIndicator.setFillColor('#ff0000'); } else if (temp > 60) { tempIndicator.setFillColor('#ffaa00'); } else if (temp < 10) { tempIndicator.setFillColor('#0088ff'); } else { tempIndicator.setFillColor('#00ff88'); } } }\"},{\"name\":\"status_monitor\",\"config\":{\"EntityId\":{\"entity_id\":\"TARGET_ENTITY\",\"field_type\":\"Status\",\"trigger_on_change\":true,\"context\":[]}},\"callback\":\"function(notification) { const status = notification.current.value.Choice || 'Offline'; const statusIndicator = this.getShape(3); const statusText = this.getShape(4); if (statusText) { statusText.setText(status); } if (statusIndicator) { switch(status) { case 'Online': statusIndicator.setFillColor('#00ff88'); statusText.setColor('#00ff88'); break; case 'Error': statusIndicator.setFillColor('#ff0000'); statusText.setColor('#ff0000'); break; case 'Maintenance': statusIndicator.setFillColor('#ffaa00'); statusText.setColor('#ffaa00'); break; default: statusIndicator.setFillColor('#888888'); statusText.setColor('#888888'); } } }\"}],\"targetEntityType\":\"ExampleDevice\"}"
              }
            ]
          }
        ]
      }
    ]
  }
}
